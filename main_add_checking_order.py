import requests
import pytz
from google_sheets import GoogleSheetHandler
from datetime import datetime

# üöÄ Danh s√°ch c√°c Google Sheet ID v√† c·∫•u h√¨nh WooCommerce Store
SHEET_AND_STORES = {
    "1u7XQOeP7vegn5u1wR-HZHKv0vjV5FcOzIh1nY92F7jw": {
        "url": "https://craftedpod.com/",
        "consumer_key": "ck_bdf4bb6a38d558ad042c356346cfd79feddd492f",
        "consumer_secret": "cs_08a8e4957bc32840fbd0b0a2cf91522df0b7840c",
        "type_date": "Etc/GMT+2"
    },
    # "1iU5kAhVSC0pIP2szucrTm4PaplUh501H2oUvLgx0mw8": {
    #     "url": "https://davidress.com/wp-json/wc/v3/orders",
    #     "consumer_key": "ck_140a74832b999d10f1f5b7b6f97ae8ddc25e835a",
    #     "consumer_secret": "cs_d290713d3e1199c51a22dc1e85707bb24bcce769",
    #     "type_date": "UTC-5"
    # },
    # "1cGF0JBFX1dkTq_56-23IblzLKpdqgVkPxNb-ZX5-sQA": {
    #     "url": "https://luxinshoes.com/wp-json/wc/v3/orders",
    #     "consumer_key": "ck_762adb5c45a88080ded28b5259e971f2274bc586",
    #     "consumer_secret": "cs_21df6fc65867df61725e29743f4bd6260f28d2af",
    #     "type_date": "UTC-4"
    # },
    # Th√™m c√°c store kh√°c n·∫øu c√≥
}

def get_order_tracking(order_id, store_config):
    """
    L·∫•y m√£ theo d√µi c·ªßa ƒë∆°n h√†ng t·ª´ WooCommerce.
    """
    try:
        url = f"{store_config['url']}wp-json/wc-shipment-tracking/v3/orders/{order_id}/shipment-trackings/"
        
        # G·ª≠i y√™u c·∫ßu GET ƒë·∫øn API Shipment Tracking v·ªõi th√¥ng tin x√°c th·ª±c
        response = requests.get(url, auth=(store_config['consumer_key'], store_config['consumer_secret']))
        print('response xxxxx' ,response.json())
        if (response.status_code == 200 or response.status_code == 201) and len(response.json()) != 0 :
           return True
        return None  # Kh√¥ng c√≥ m√£ theo d√µi
    except requests.exceptions.RequestException as e:
        print(f"‚ùå L·ªói khi l·∫•y m√£ theo d√µi cho ƒë∆°n h√†ng {order_id}: {e}")
        return None
    
def get_current_time_in_timezone(timezone_str):
    """Tr·∫£ v·ªÅ th·ªùi gian hi·ªán t·∫°i theo m√∫i gi·ªù cho tr∆∞·ªõc"""
    try:
        # L·∫•y m√∫i gi·ªù theo chu·ªói (v√≠ d·ª• "UTC-5", "UTC+7")
        timezone = pytz.timezone(timezone_str)
        # L·∫•y th·ªùi gian hi·ªán t·∫°i theo m√∫i gi·ªù ƒë√£ ch·ªçn
        current_time = datetime.now(timezone)
        # ƒê·ªãnh d·∫°ng l·∫°i th·ªùi gian theo ƒë·ªãnh d·∫°ng "YYYY-MM-DD" (ch·ªâ ng√†y)
        return current_time.strftime("%Y-%m-%d")
    except pytz.UnknownTimeZoneError:
        print("M√∫i gi·ªù kh√¥ng h·ª£p l·ªá!")
        return None

def update_order_tracking(order_id, tracking_number, store_config):
    """
    C·∫≠p nh·∫≠t m√£ theo d√µi cho ƒë∆°n h√†ng trong WooCommerce.
    """
    try:
        url = f"{store_config['url']}wp-json/wc-shipment-tracking/v3/orders/{order_id}/shipment-trackings"
        
        # D·ªØ li·ªáu g·ª≠i ƒëi, bao g·ªìm tracking number v√† provider
        payload = {
            "custom_tracking_provider": "Custom Provider",  # Thay provider name theo y√™u c·∫ßu
            "tracking_number": tracking_number,
            "custom_tracking_link" :  "https://t.17track.net/en#nums={tracking_number}",
            "date_shipped": get_current_time_in_timezone(store_config["type_date"])
        }
        # G·ª≠i y√™u c·∫ßu POST t·ªõi API Shipment Tracking
        response = requests.post(
            url,
            json=payload,
            auth=(store_config['consumer_key'], store_config['consumer_secret']),  # Th√™m auth v·ªõi consumer_key v√† consumer_secret
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200 or response.status_code == 201 :
            print(f"‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng m√£ theo d√µi cho ƒë∆°n h√†ng {order_id}.")
            
            # Sau khi c·∫≠p nh·∫≠t m√£ theo d√µi, c·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa ƒë∆°n h√†ng
            status_data = {
                "status": "completed"  # ƒê·∫∑t tr·∫°ng th√°i th√†nh "completed"
            }
            
            # Th·ª±c hi·ªán PUT request ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i
            status_url = f"{store_config['url']}/wp-json/wc/v3/orders/{order_id}?consumer_key={store_config['consumer_key']}&consumer_secret={store_config['consumer_secret']}"
            status_response = requests.put(status_url, json=status_data)

            if status_response.status_code == 200:
                print(f"‚úÖ Tr·∫°ng th√°i c·ªßa ƒë∆°n h√†ng {order_id} ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh 'completed'.")
            else:
                print(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i cho ƒë∆°n h√†ng {order_id}. M√£ l·ªói: {status_response.status_code}")
        else:
            print(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t m√£ theo d√µi cho ƒë∆°n h√†ng {order_id}. M√£ l·ªói: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå L·ªói khi g·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t m√£ theo d√µi cho ƒë∆°n h√†ng {order_id}: {e}")


def process_orders(sheet_id, store_config ):
    """
    Qu·∫£n l√Ω v√† x·ª≠ l√Ω ƒë∆°n h√†ng t·ª´ Google Sheets
    """
    try:
        google_sheets = GoogleSheetHandler(sheet_id)
        sheet1, _ = google_sheets.get_sheets()
        data = sheet1.get_all_values()
        
        if len(data) <= 1:
            print("‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu trong Sheet.")
            return
        
        headers = data[0]
        order_id_idx = headers.index("Order ID")
        number_checking_idx = headers.index("Number Checking")

        for row in data[1:]:  # B·ªè qua ti√™u ƒë·ªÅ
            order_id = row[order_id_idx].strip()
            number_checking = row[number_checking_idx].strip()
            if order_id and number_checking:  # Ki·ªÉm tra n·∫øu c√≥ m√£ theo d√µi
                print(f"üîç ƒêang ki·ªÉm tra m√£ theo d√µi cho ƒë∆°n h√†ng: {order_id}")
                # Ki·ªÉm tra m√£ theo d√µi
                existing_tracking = get_order_tracking(order_id, store_config)
                if existing_tracking:
                    print(f"‚úÖ ƒê∆°n h√†ng {order_id} ƒë√£ c√≥ m√£ theo d√µi: {existing_tracking}. B·ªè qua.")
                else:
                    print(f"‚ùå ƒê∆°n h√†ng {order_id} ch∆∞a c√≥ m√£ theo d√µi. Th√™m m√£ theo d√µi m·ªõi.")
                    # N·∫øu ch∆∞a c√≥ m√£ theo d√µi, th·ª±c hi·ªán th√™m m√£ theo d√µi v√†o WooCommerce
                    tracking_number = number_checking  # T·∫°o m√£ theo d√µi v√≠ d·ª•: "YT12345"
                    update_order_tracking(order_id, tracking_number, store_config)  # C·∫≠p nh·∫≠t m√£ theo d√µi v√†o WooCommerce                    
            else:
                print(f"‚úÖ ƒê∆°n h√†ng {order_id} ch∆∞a c√≥ Checking Number. B·ªè qua.")
    except Exception as e:
        print(f"‚ùå L·ªói khi x·ª≠ l√Ω ƒë∆°n h√†ng trong Sheet {sheet_id}: {e}")

def main():
    """
    Ch·∫°y ch∆∞∆°ng tr√¨nh v·ªõi c√°c Sheet ID v√† store t∆∞∆°ng ·ª©ng.
    """
    for sheet_id, store_config in SHEET_AND_STORES.items():
        print(f"\nüöÄ ƒêang x·ª≠ l√Ω Sheet v·ªõi ID: {sheet_id} v√† WooCommerce Store: {store_config['url']}")
        process_orders(sheet_id, store_config )
    print("\nüéâ Ho√†n t·∫•t x·ª≠ l√Ω ƒë∆°n h√†ng v√† c·∫≠p nh·∫≠t m√£ theo d√µi!")

if __name__ == "__main__":
    main()
